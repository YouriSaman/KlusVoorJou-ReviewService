// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReviewService.DAL;

namespace ReviewService.Migrations
{
    [DbContext(typeof(ReviewDbContext))]
    partial class ReviewDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("ReviewService.Models.Review", b =>
                {
                    b.Property<string>("ReviewId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreateTime")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ReviewReplyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ReviewerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("StarRating")
                        .HasColumnType("int");

                    b.Property<string>("UpdateTime")
                        .HasColumnType("longtext");

                    b.HasKey("ReviewId");

                    b.HasIndex("ReviewReplyId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("ReviewService.Models.ReviewReply", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdateTime")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ReviewReply");
                });

            modelBuilder.Entity("ReviewService.Models.Reviewer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ProfilePhotoUrl")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Reviewer");
                });

            modelBuilder.Entity("ReviewService.Models.Review", b =>
                {
                    b.HasOne("ReviewService.Models.ReviewReply", "ReviewReply")
                        .WithMany()
                        .HasForeignKey("ReviewReplyId");

                    b.HasOne("ReviewService.Models.Reviewer", "Reviewer")
                        .WithMany()
                        .HasForeignKey("ReviewerId");

                    b.Navigation("Reviewer");

                    b.Navigation("ReviewReply");
                });
#pragma warning restore 612, 618
        }
    }
}
